name: PR Automation

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, labeled, unlabeled]
  pull_request_target:
    types: [opened]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  pr-labeler:
    name: Auto Label PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Label based on changed files
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
      
      - name: Add size label
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;
            
            let sizeLabel = '';
            if (total < 10) sizeLabel = 'size/XS';
            else if (total < 50) sizeLabel = 'size/S';
            else if (total < 200) sizeLabel = 'size/M';
            else if (total < 500) sizeLabel = 'size/L';
            else sizeLabel = 'size/XL';
            
            // Remove old size labels
            const oldSizeLabels = ['size/XS', 'size/S', 'size/M', 'size/L', 'size/XL'];
            for (const label of oldSizeLabels) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  name: label
                });
              } catch (e) {}
            }
            
            // Add new size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [sizeLabel]
            });
      
      - name: Label by type from title
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            
            const typeMap = {
              'feat': 'type/feature',
              'fix': 'type/bug',
              'docs': 'type/documentation',
              'chore': 'type/chore',
              'refactor': 'type/refactor',
              'test': 'type/test',
              'ci': 'type/ci',
              'perf': 'type/performance',
              'style': 'type/style'
            };
            
            for (const [prefix, label] of Object.entries(typeMap)) {
              if (title.startsWith(prefix)) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: [label]
                });
                break;
              }
            }

  pr-assignment:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'opened'
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Auto assign reviewers
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          configuration-path: '.github/auto-assign.yml'

  pr-title-check:
    name: Validate PR Title
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^[A-Z].+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            starts with an uppercase character.

  pr-size-check:
    name: Check PR Size
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Check size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const total = pr.additions + pr.deletions;
            const maxSize = 1000;
            
            if (total > maxSize) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `## ‚ö†Ô∏è Large PR Warning
                
                This PR has ${total} lines of changes, which exceeds the recommended ${maxSize} lines.
                
                **Recommendations:**
                - Consider breaking this PR into smaller, focused changes
                - This makes reviewing easier and reduces merge conflicts
                - Smaller PRs are merged faster and with fewer issues
                
                If this PR must be large, please add a detailed description explaining the changes.`
              });
            }

  pr-checklist:
    name: Verify PR Checklist
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Check description
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            const requiredSections = [
              'description',
              'testing',
              'changes'
            ];
            
            const missingSections = [];
            for (const section of requiredSections) {
              if (!body.toLowerCase().includes(section)) {
                missingSections.push(section);
              }
            }
            
            if (body.length < 50) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `## üìù PR Description Needed
                
                This PR needs a more detailed description. Please add:
                - What changes were made
                - Why these changes were necessary
                - How to test the changes
                - Any breaking changes or migration notes`
              });
            }

  pr-conflict-check:
    name: Check for Merge Conflicts
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Check conflicts
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            if (pr.mergeable === false) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: ['conflict']
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `## ‚ö†Ô∏è Merge Conflicts Detected
                
                This PR has merge conflicts with the base branch.
                
                **To resolve:**
                1. Sync your branch with the latest changes: \`git pull origin ${{ github.event.pull_request.base.ref }}\`
                2. Resolve conflicts locally
                3. Push the resolved changes
                
                The conflict label will be removed automatically once resolved.`
              });
            } else if (pr.mergeable === true) {
              // Remove conflict label if present
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  name: 'conflict'
                });
              } catch (e) {}
            }

  pr-dependency-check:
    name: Check Dependency Changes
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for dependency changes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const dependencyFiles = [
              'package.json',
              'pnpm-lock.yaml',
              'app/package.json',
              'app/pnpm-lock.yaml'
            ];
            
            const changedDependencyFiles = files.filter(f => 
              dependencyFiles.includes(f.filename)
            );
            
            if (changedDependencyFiles.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['dependencies']
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## üì¶ Dependency Changes Detected
                
                This PR modifies dependencies. Please ensure:
                - [ ] All new dependencies are necessary
                - [ ] Licenses are compatible (MIT, Apache-2.0, BSD)
                - [ ] No known security vulnerabilities
                - [ ] Lock file is updated (\`pnpm install\`)
                - [ ] Changes are documented in PR description
                
                Security scan will run automatically.`
              });
            }

  pr-stale-check:
    name: Mark Stale PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    timeout-minutes: 10
    
    steps:
      - name: Mark stale PRs
        uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-pr-message: |
            This PR has been automatically marked as stale because it has not had
            recent activity. It will be closed in 7 days if no further activity occurs.
            
            Please:
            - Update the PR to address review comments
            - Rebase on the latest main branch
            - Comment if you're still working on it
          close-pr-message: |
            This PR was automatically closed due to inactivity.
            Feel free to reopen it when you're ready to continue.
          days-before-stale: 30
          days-before-close: 7
          stale-pr-label: 'stale'
          exempt-pr-labels: 'work-in-progress,blocked'

  pr-metrics:
    name: Track PR Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
      - name: Calculate metrics
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            const metrics = {
              additions: pr.additions,
              deletions: pr.deletions,
              changedFiles: pr.changed_files,
              commits: pr.commits,
              reviewComments: pr.review_comments,
              comments: pr.comments
            };
            
            console.log('PR Metrics:', JSON.stringify(metrics, null, 2));
            
            // Add metrics comment on PR open
            if (context.payload.action === 'opened') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `## üìä PR Metrics
                
                | Metric | Value |
                |--------|-------|
                | Lines Added | ${metrics.additions} |
                | Lines Deleted | ${metrics.deletions} |
                | Files Changed | ${metrics.changedFiles} |
                | Commits | ${metrics.commits} |
                
                Thank you for your contribution! üéâ`
              });
            }
